package com.yogeshbirthdaywisher.birthdaywisher.date_conversion;


public class NepaliDays
{
	int [][] arr = {
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
        {31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},  // 2073
        {31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
        {31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
        {31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
        {31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
        {31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30},
        {31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30},
        {31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
        {31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30},
        {30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
        {30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30}
    };

    int year1,month1,date1,year2,month2,date2;
    int [] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    int [] english_date = {1944 , 1 , 1};

    public NepaliDays()
    {
        

        DatePicker dp = new DatePicker();
        dp.setCurrentDate();
        year1 = dp.getYear();
        month1 = dp.getMonth();
        date1 = dp.getDay();

        
    }

    public String getReference(int month, int date)
    {
        month2 = month;
        date2 = date;

        if(month1 > month2)
            year2 = year1+1;
        else if(month1 == month2 && date1 > date2 )
            year2 = year1 +1;
        else year2 = year1;

        int difference = this.countNepaliDays(year1,month1,date1) - this.countNepaliDays(year2,month2,date2);
        return filterDays(difference);
    }

    private String filterDays(int difference)
    {
        if(difference < 0)
            difference = 0 - difference;
        if (difference <= 40){
            if (difference == 0)
                return "Today";
            else if(difference == 1)
                return "1 day left";
            else
                return Integer.toString(difference) + " days left";
        }
        else{
            if (Math.round(difference / 30) == 1)
                return "1 month left";
            else
                return Integer.toString(Math.round(difference/30)) + " months left";
        }
    }

    private int countNepaliDays(int y,int m,int d)
    {
        //ref day is 2000/9/17, or 102days from 2001/1/1
        int days = 0;
        if(y<2000)
            return 0;
        int yIndex = y - 2000;
        days += d-1;
        for(int i=0; i < m-1; i++)
            days += this.arr[yIndex][i];
        
        for(int i=0; i < yIndex; i++)
            days += this.countTotalYearDays(i);
        return days;
    }

    private int countTotalYearDays(int index)
    {
        int total = 0;
        for(int i=0; i < 12; i++)
            total += arr[index][i];
        return total;
    }

    public static void main(String[] args)
    {
        NepaliDays nd = new NepaliDays();
        System.out.println(nd.getReference(9,4));
    }
}