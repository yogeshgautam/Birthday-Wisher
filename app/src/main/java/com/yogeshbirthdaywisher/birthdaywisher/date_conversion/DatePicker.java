package com.yogeshbirthdaywisher.birthdaywisher.date_conversion;

import java.text.SimpleDateFormat;
import java.util.Date;

public class DatePicker
{
	int y1,m1,d1,y2,m2,d2;
	int j1,j2;
	int days;
	private int monthDays[] = {31, 28, 31, 30, 31, 30,31, 31, 30, 31, 30, 31};
	int date[]= {2072 , 1 , 1};
	int[] arr_total=new int[90];
	int arr[][]={  
			{ 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 }, //2000
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },	//2001
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
			{ 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30 },
			{ 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },
			{ 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30 },
			{ 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
	        { 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30 },  //2072
	        { 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31 },   //2073
	        { 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30 },
	        { 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
	        { 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30 },
	        { 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31 },
	        { 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30 },
	        { 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30 },
	        { 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30 },
	        { 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30 },
	        { 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30 },
	        { 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30 },
	        { 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30 },
	        { 31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30 },
	        { 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30 },
	        { 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30 },
	        { 30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30 },
	        { 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30 },
	        { 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30 }	//2090
};
	public void setCurrentDate()
	{
		Date dNow = new Date();
	    SimpleDateFormat ft = new SimpleDateFormat("yyyy");
	    int y = new Integer(ft.format(dNow));
	    ft = new SimpleDateFormat("MM");
	    int m = new Integer(ft.format(dNow));
	    ft = new SimpleDateFormat("dd");
	    int d = new Integer(ft.format(dNow));
	    setDate(y,m,d);
	}

	public void  setDate(int y2,int m2,int d2)
	{   
		this.y2=y2;
		this.m2=m2;
		this.d2=d2;
	    int a=countday(2015,4,14);
	    int b=countday(y2,m2,d2);
	     
	     
	     for (int i=0;i<=89;i++)
			{
				arr_total[i]=0;
				for (int j=0;j<=11;j++)
				{
					arr_total[i]+= arr[i][j];
				}
			}

		int k=0;
		int z=0;
		
		int diffInDays =b-a;
		
		while (diffInDays>=0)
		{
			if (diffInDays>=arr_total[k])
			{	diffInDays=diffInDays-arr_total[k];
			k++;
			date[0]+=1;
			}
			else if ((diffInDays<arr_total[k])  && (diffInDays>=arr[k][z]))
			 {   
				 date[1]+=1;
				 diffInDays-=arr[k][z];
				 z++;
			 
				 
		     }
			 
			  else
			 {
				 date[2] += (int)diffInDays;
				 break;	
			  }
		}
	
	
	}
	
	public int countday(int y,int m,int d)
	{  int i;
		int k=y*365+d;
		
	
		
		for (i=0;i<m-1;i++)
			k=k+monthDays[i];
		
		    k=k+countleap(y,m);
		 return k;
	}
		
	public int countleap(int y,int m)
	{
		if (m<=2)
			y--;
		
		return (y/4-y/100+y/400);
	}
	
	
	public int  getDay()
	{
		return (date[2]);
	}
	
	public int getMonth()
	{
		return (date[1]);
	}
	
	public int getYear()
	{
		return (date[0]);
	}
	
	public String toString()
	{
		return toString("-");
	}
	
	public String toString(String mid)
	{
		return new String(""+date[0] + mid + date[1] + mid + date[2]);
	}
	
	public String [] getYearArray()
	{
		int lastYear = 2000;
		String [] years = new String[date[0] - lastYear+1];
		int n = 0;
		for(int i = date[0]; i >= lastYear; i--)
			years[n++] = new String(""+i);
		return years;
	}
	
	public String [] getMonthArray()
	{
		String [] months = {"Baishakh","Jestha","Asar","Shrawan","Bhadra","Aswin","Kartik","Mansir","Poush","Magh","Falgun","Chaitra"};
		return months;
	}
	
	public String [] getDateArray(int year,int month)
	{
		String [] dates = new String[arr[year-2000][month]];
		for(int i=0; i < arr[year-2000][month] ; i++)
			dates[i] = new String(""+ (i+1) );
		return dates;		
	}
	
}